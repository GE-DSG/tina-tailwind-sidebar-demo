# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
interface Node {
  id: ID!
}

interface Document {
  sys: SystemInfo
  id: ID!
}

interface FormField {
  label: String
  name: String
  component: String
}

"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

""""""
scalar JSONObject

type SystemInfo {
  filename: String
  basename: String
  breadcrumbs(excludeExtension: Boolean): [String]
  path: String
  relativePath: String
  extension: String
  template: String
  collection: Section
}

type Section {
  type: String
  path: String
  format: String
  label: String
  create: String
  match: String
  new_doc_ext: String
  templates: [String]
  slug: String
  documents: [Document]
}

union SectionDocumentUnion = Page_Document

input SectionParams {
  page: Page_Input
}

type Mutation {
  addPendingDocument(relativePath: String, collection: String, template: String): Document
  updateDocument(relativePath: String, params: SectionParams): SectionDocumentUnion
  updatePageDocument(relativePath: String, params: Page_Input): Page_Document
}

type Query {
  node(id: ID!): Node
  getDocument(collection: String, relativePath: String): SectionDocumentUnion
  getCollections: [Section]
  getCollection(collection: String): Section
  getPageDocument(relativePath: String): Page_Document
  getPageList: [Page_Document]
}

union Page_Data = Homepage_Doc_Data

input Page_Input {
  homepage: Homepage_Doc_Input
}

union Page_Values = Homepage_Doc_Values

union Page_Form = Homepage_Doc_Form

type Page_Document implements Node & Document {
  id: ID!
  sys: SystemInfo
  data: Page_Data
  values: Page_Values
  form: Page_Form
}

type NavWordmark_Icon_Data {
  color: String
  style: String
}

type HomepageNav_Wordmark_Data {
  icon: NavWordmark_Icon_Data
  name: String
}

type Homepage_Nav_Data {
  wordmark: HomepageNav_Wordmark_Data
}

type Homepage_Doc_Data {
  nav: Homepage_Nav_Data
  _body: String
}

type NavWordmark_Icon_Values {
  color: Reference
  style: Reference
}

type HomepageNav_Wordmark_Values {
  icon: NavWordmark_Icon_Values
  name: String
}

type Homepage_Nav_Values {
  wordmark: HomepageNav_Wordmark_Values
}

type Homepage_Doc_Values {
  nav: Homepage_Nav_Values
  _body: String
  _template: String
}

type SelectField implements FormField {
  name: String
  label: String
  component: String
  options: [String]
}

union NavWordmark_Icon_FormFieldsUnion = SelectField

type NavWordmark_Icon_GroupField implements FormField {
  name: String
  label: String
  component: String
  fields: [NavWordmark_Icon_FormFieldsUnion]
}

type TextField implements FormField {
  name: String
  label: String
  component: String
}

union HomepageNav_Wordmark_FormFieldsUnion = NavWordmark_Icon_GroupField | TextField

type HomepageNav_Wordmark_GroupField implements FormField {
  name: String
  label: String
  component: String
  fields: [HomepageNav_Wordmark_FormFieldsUnion]
}

union Homepage_Nav_FormFieldsUnion = HomepageNav_Wordmark_GroupField

type Homepage_Nav_GroupField implements FormField {
  name: String
  label: String
  component: String
  fields: [Homepage_Nav_FormFieldsUnion]
}

type TextareaField implements FormField {
  name: String
  label: String
  component: String
}

union Homepage_Doc_FormFieldsUnion = Homepage_Nav_GroupField | TextareaField

type Homepage_Doc_Form {
  label: String
  name: String
  fields: [Homepage_Doc_FormFieldsUnion]
}

input NavWordmark_Icon_Input {
  color: String
  style: String
}

input HomepageNav_Wordmark_Input {
  icon: NavWordmark_Icon_Input
  name: String
}

input Homepage_Nav_Input {
  wordmark: HomepageNav_Wordmark_Input
}

input Homepage_Doc_Input {
  nav: Homepage_Nav_Input
  _body: String
}

  