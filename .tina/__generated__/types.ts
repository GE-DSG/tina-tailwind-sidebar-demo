// DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** References another document, used as a foreign key */
  Reference: any;
  JSON: any;
  JSONObject: any;
};

export type Node = {
  id: Scalars['ID'];
};

export type Document = {
  sys?: Maybe<SystemInfo>;
  id: Scalars['ID'];
};

export type FormField = {
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};




export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename?: Maybe<Scalars['String']>;
  basename?: Maybe<Scalars['String']>;
  breadcrumbs?: Maybe<Array<Maybe<Scalars['String']>>>;
  path?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
  extension?: Maybe<Scalars['String']>;
  template?: Maybe<Scalars['String']>;
  collection?: Maybe<Section>;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: Maybe<Scalars['Boolean']>;
};

export type Section = {
  __typename?: 'Section';
  type?: Maybe<Scalars['String']>;
  path?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  create?: Maybe<Scalars['String']>;
  match?: Maybe<Scalars['String']>;
  new_doc_ext?: Maybe<Scalars['String']>;
  templates?: Maybe<Array<Maybe<Scalars['String']>>>;
  slug?: Maybe<Scalars['String']>;
  documents?: Maybe<Array<Maybe<Document>>>;
};

export type SectionDocumentUnion = Page_Document;

export type SectionParams = {
  page?: Maybe<Page_Input>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument?: Maybe<Document>;
  updateDocument?: Maybe<SectionDocumentUnion>;
  updatePageDocument?: Maybe<Page_Document>;
};


export type MutationAddPendingDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  collection?: Maybe<Scalars['String']>;
  template?: Maybe<Scalars['String']>;
};


export type MutationUpdateDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  params?: Maybe<SectionParams>;
};


export type MutationUpdatePageDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
  params?: Maybe<Page_Input>;
};

export type Query = {
  __typename?: 'Query';
  node?: Maybe<Node>;
  getDocument?: Maybe<SectionDocumentUnion>;
  getCollections?: Maybe<Array<Maybe<Section>>>;
  getCollection?: Maybe<Section>;
  getPageDocument?: Maybe<Page_Document>;
  getPageList?: Maybe<Array<Maybe<Page_Document>>>;
};


export type QueryNodeArgs = {
  id: Scalars['ID'];
};


export type QueryGetDocumentArgs = {
  collection?: Maybe<Scalars['String']>;
  relativePath?: Maybe<Scalars['String']>;
};


export type QueryGetCollectionArgs = {
  collection?: Maybe<Scalars['String']>;
};


export type QueryGetPageDocumentArgs = {
  relativePath?: Maybe<Scalars['String']>;
};

export type Page_Data = Homepage_Doc_Data;

export type Page_Input = {
  homepage?: Maybe<Homepage_Doc_Input>;
};

export type Page_Values = Homepage_Doc_Values;

export type Page_Form = Homepage_Doc_Form;

export type Page_Document = Node & Document & {
  __typename?: 'Page_Document';
  id: Scalars['ID'];
  sys?: Maybe<SystemInfo>;
  data?: Maybe<Page_Data>;
  values?: Maybe<Page_Values>;
  form?: Maybe<Page_Form>;
};

export type NavWordmark_Icon_Data = {
  __typename?: 'NavWordmark_Icon_Data';
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
};

export type HomepageNav_Wordmark_Data = {
  __typename?: 'HomepageNav_Wordmark_Data';
  icon?: Maybe<NavWordmark_Icon_Data>;
  name?: Maybe<Scalars['String']>;
};

export type Homepage_Nav_Data = {
  __typename?: 'Homepage_Nav_Data';
  wordmark?: Maybe<HomepageNav_Wordmark_Data>;
};

export type Homepage_Doc_Data = {
  __typename?: 'Homepage_Doc_Data';
  nav?: Maybe<Homepage_Nav_Data>;
  _body?: Maybe<Scalars['String']>;
};

export type NavWordmark_Icon_Values = {
  __typename?: 'NavWordmark_Icon_Values';
  color?: Maybe<Scalars['Reference']>;
  style?: Maybe<Scalars['Reference']>;
};

export type HomepageNav_Wordmark_Values = {
  __typename?: 'HomepageNav_Wordmark_Values';
  icon?: Maybe<NavWordmark_Icon_Values>;
  name?: Maybe<Scalars['String']>;
};

export type Homepage_Nav_Values = {
  __typename?: 'Homepage_Nav_Values';
  wordmark?: Maybe<HomepageNav_Wordmark_Values>;
};

export type Homepage_Doc_Values = {
  __typename?: 'Homepage_Doc_Values';
  nav?: Maybe<Homepage_Nav_Values>;
  _body?: Maybe<Scalars['String']>;
  _template?: Maybe<Scalars['String']>;
};

export type SelectField = FormField & {
  __typename?: 'SelectField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
  options?: Maybe<Array<Maybe<Scalars['String']>>>;
};

export type NavWordmark_Icon_FormFieldsUnion = SelectField;

export type NavWordmark_Icon_GroupField = FormField & {
  __typename?: 'NavWordmark_Icon_GroupField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
  fields?: Maybe<Array<Maybe<NavWordmark_Icon_FormFieldsUnion>>>;
};

export type TextField = FormField & {
  __typename?: 'TextField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};

export type HomepageNav_Wordmark_FormFieldsUnion = NavWordmark_Icon_GroupField | TextField;

export type HomepageNav_Wordmark_GroupField = FormField & {
  __typename?: 'HomepageNav_Wordmark_GroupField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
  fields?: Maybe<Array<Maybe<HomepageNav_Wordmark_FormFieldsUnion>>>;
};

export type Homepage_Nav_FormFieldsUnion = HomepageNav_Wordmark_GroupField;

export type Homepage_Nav_GroupField = FormField & {
  __typename?: 'Homepage_Nav_GroupField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
  fields?: Maybe<Array<Maybe<Homepage_Nav_FormFieldsUnion>>>;
};

export type TextareaField = FormField & {
  __typename?: 'TextareaField';
  name?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  component?: Maybe<Scalars['String']>;
};

export type Homepage_Doc_FormFieldsUnion = Homepage_Nav_GroupField | TextareaField;

export type Homepage_Doc_Form = {
  __typename?: 'Homepage_Doc_Form';
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  fields?: Maybe<Array<Maybe<Homepage_Doc_FormFieldsUnion>>>;
};

export type NavWordmark_Icon_Input = {
  color?: Maybe<Scalars['String']>;
  style?: Maybe<Scalars['String']>;
};

export type HomepageNav_Wordmark_Input = {
  icon?: Maybe<NavWordmark_Icon_Input>;
  name?: Maybe<Scalars['String']>;
};

export type Homepage_Nav_Input = {
  wordmark?: Maybe<HomepageNav_Wordmark_Input>;
};

export type Homepage_Doc_Input = {
  nav?: Maybe<Homepage_Nav_Input>;
  _body?: Maybe<Scalars['String']>;
};

